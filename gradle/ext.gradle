def property(String key) {
    Properties properties = new Properties()
    try {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    } catch (Exception e) {
    }
    return properties.getProperty(key)
}

ext {
    libVersion = '1.0.0-beta11'
    libUploadName = 'android-reactive-databinding'
    libDescription = 'Library that helps bind data with reactive streams, like rx java Flowable or coroutines flow or whatever, what you want to implement'
    libGroupId = 'io.github.iamthevoid.reactivebinding'

    libGit = 'https://github.com/iamthevoid/android-dsl-databinding.git'
    libScm = 'scm:git:github.com/iamthevoid/android-dsl-databinding.git'
    libScmDev = 'scm:git:ssh://github.com/iamthevoid/android-dsl-databinding.git'
    libWebsite = 'https://github.com/iamthevoid/android-dsl-databinding'

    libDeveloperId = 'iamthevoid'
    libDeveloperName = 'Alexander Tarabrin'
    libDeveloperEmail = 'alesetar@gmail.com'

    libLicenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

    libMinSdk = 16
    compileApi = 29
    targetApi = 29

    android_gradle_plugin = '7.0.0'

    dokka = '1.5.0'

    kotlin_version = '1.5.20'
    kotlinJvmTarget = '1.8'

    e = "0.6.10"

    anko = "0.10.8"
    splitties = "3.0.0-alpha06"
    coil = "1.2.2"
    glide = "4.9.0"

    coroutines = "1.5.0"

    room = "2.3.0"
    jsoup = "1.13.1"
    gson = "2.8.7"
    okhttp = "4.2.1"
    retrofit = "2.8.0"

    // rx
    rxJava = "2.2.21"
    rxAndroid = "2.1.1"
    rxKotlin = "2.4.0"

    // x
    appcompat = "1.3.1"
    lifecycle = "2.3.1"
    lifecycle_ext = "2.2.0"
    material = "1.4.0"
    recycler = "1.2.1"
    ktx = "1.6.0"
    swipe = "1.1.0"
    multidex = "2.0.1"

    // test
    espresso = "3.4.0"
    junit = "4.13.2"
    runner = "1.4.0"
    ajunit = "1.1.3"
}
